{
    "sourceFile": "src/data/Test.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 14,
            "patches": [
                {
                    "date": 1746765299233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746765320455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,1 @@\n-import\n\\ No newline at end of file\n+import test\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746765399313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +0,0 @@\n-import test\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746765608285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,8 @@\n+// Utility function to call an API endpoint\r\n+export async function callApi<T>(url: string, options?: RequestInit): Promise<T> {\r\n+    const response = await fetch(url, options);\r\n+    if (!response.ok) {\r\n+        throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n+    }\r\n+    return response.json() as Promise<T>;\r\n+}\r\n"
                },
                {
                    "date": 1746765695349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,4 +5,17 @@\n         throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n     }\r\n     return response.json() as Promise<T>;\r\n }\r\n+\r\n+import data from './Test.json';\r\n+\r\n+export type Review = {\r\n+    id: number;\r\n+    name: string;\r\n+    address: string;\r\n+    image: string;\r\n+    rating: number;\r\n+    review: string;\r\n+};\r\n+\r\n+export const reviews: Review[] = data;\r\n"
                },
                {
                    "date": 1746765715371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,51 @@\n-// Utility function to call an API endpoint\r\n-export async function callApi<T>(url: string, options?: RequestInit): Promise<T> {\r\n-    const response = await fetch(url, options);\r\n-    if (!response.ok) {\r\n-        throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n-    }\r\n-    return response.json() as Promise<T>;\r\n-}\r\n-\r\n-import data from './Test.json';\r\n-\r\n-export type Review = {\r\n+import reviewsData from \"./Test.json\";\r\n+// If you have a ReviewType, import it. Otherwise, use the type defined below.\r\n+export type ReviewType = {\r\n     id: number;\r\n     name: string;\r\n     address: string;\r\n     image: string;\r\n     rating: number;\r\n     review: string;\r\n+    avatar?: string;\r\n+    href?: string;\r\n };\r\n \r\n-export const reviews: Review[] = data;\r\n+// Import avatar images (adjust paths as needed)\r\n+import avatar1 from \"@/images/avatars/Image-1.png\";\r\n+import avatar2 from \"@/images/avatars/Image-2.png\";\r\n+import avatar3 from \"@/images/avatars/Image-3.png\";\r\n+// ...add more if needed...\r\n+\r\n+const imgs = [\r\n+    avatar1,\r\n+    avatar2,\r\n+    avatar3,\r\n+    // ...add more if needed...\r\n+];\r\n+\r\n+// Replace with your actual API endpoint and token if needed\r\n+const API_URL = \"https://app.nocodb.com/api/v2/tables/mv1i2g5clfl7tko/records?offset=0&limit=25&where=&viewId=vwu0qdr472tmmxll\";\r\n+const API_TOKEN = \"s5xB7tQBuVu9pYiEbT1aYPrqNLZuANXmPnQqVA7n\"; // Replace with your nocodb API token\r\n+\r\n+export async function fetchReviews(): Promise<ReviewType[]> {\r\n+    const response = await fetch(API_URL, {\r\n+        headers: {\r\n+            \"xc-token\": API_TOKEN,\r\n+            \"Content-Type\": \"application/json\",\r\n+        },\r\n+    });\r\n+    const data = await response.json();\r\n+    const reviews = data.records || [];\r\n+    return reviews.map((item: any, index: number) => ({\r\n+        ...item,\r\n+        avatar: imgs[index] || item.image,\r\n+        // Add href or other fields as needed\r\n+    }));\r\n+}\r\n+\r\n+export const DEMO_REVIEWS: ReviewType[] = reviewsData.map((item, index) => ({\r\n+    ...item,\r\n+    avatar: imgs[index] || item.image,\r\n+    // Add href or other fields as needed\r\n+}));\r\n"
                },
                {
                    "date": 1746765748325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,21 +10,8 @@\n     avatar?: string;\r\n     href?: string;\r\n };\r\n \r\n-// Import avatar images (adjust paths as needed)\r\n-import avatar1 from \"@/images/avatars/Image-1.png\";\r\n-import avatar2 from \"@/images/avatars/Image-2.png\";\r\n-import avatar3 from \"@/images/avatars/Image-3.png\";\r\n-// ...add more if needed...\r\n-\r\n-const imgs = [\r\n-    avatar1,\r\n-    avatar2,\r\n-    avatar3,\r\n-    // ...add more if needed...\r\n-];\r\n-\r\n // Replace with your actual API endpoint and token if needed\r\n const API_URL = \"https://app.nocodb.com/api/v2/tables/mv1i2g5clfl7tko/records?offset=0&limit=25&where=&viewId=vwu0qdr472tmmxll\";\r\n const API_TOKEN = \"s5xB7tQBuVu9pYiEbT1aYPrqNLZuANXmPnQqVA7n\"; // Replace with your nocodb API token\r\n \r\n"
                },
                {
                    "date": 1746765762912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import reviewsData from \"./Test.json\";\r\n+import reviewsData from \"./testimonials.json\";\r\n // If you have a ReviewType, import it. Otherwise, use the type defined below.\r\n export type ReviewType = {\r\n     id: number;\r\n     name: string;\r\n"
                },
                {
                    "date": 1746765800785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n };\r\n \r\n // Replace with your actual API endpoint and token if needed\r\n const API_URL = \"https://app.nocodb.com/api/v2/tables/mv1i2g5clfl7tko/records?offset=0&limit=25&where=&viewId=vwu0qdr472tmmxll\";\r\n-const API_TOKEN = \"s5xB7tQBuVu9pYiEbT1aYPrqNLZuANXmPnQqVA7n\"; // Replace with your nocodb API token\r\n+const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\"; // Replace with your nocodb API token\r\n \r\n export async function fetchReviews(): Promise<ReviewType[]> {\r\n     const response = await fetch(API_URL, {\r\n         headers: {\r\n"
                },
                {
                    "date": 1746765817420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n     href?: string;\r\n };\r\n \r\n // Replace with your actual API endpoint and token if needed\r\n-const API_URL = \"https://app.nocodb.com/api/v2/tables/mv1i2g5clfl7tko/records?offset=0&limit=25&where=&viewId=vwu0qdr472tmmxll\";\r\n+const API_URL = \"https://app.nocodb.com/api/v2/tables/mqxdcj08df39q7u/records?offset=0&limit=25&where=&viewId=vwuk6k6pdfoz6672\";\r\n const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\"; // Replace with your nocodb API token\r\n \r\n export async function fetchReviews(): Promise<ReviewType[]> {\r\n     const response = await fetch(API_URL, {\r\n"
                },
                {
                    "date": 1746765843324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,8 @@\n     address: string;\r\n     image: string;\r\n     rating: number;\r\n     review: string;\r\n-    avatar?: string;\r\n-    href?: string;\r\n-};\r\n \r\n // Replace with your actual API endpoint and token if needed\r\n const API_URL = \"https://app.nocodb.com/api/v2/tables/mqxdcj08df39q7u/records?offset=0&limit=25&where=&viewId=vwuk6k6pdfoz6672\";\r\n const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\"; // Replace with your nocodb API token\r\n"
                },
                {
                    "date": 1746766120537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +0,0 @@\n-import reviewsData from \"./testimonials.json\";\r\n-// If you have a ReviewType, import it. Otherwise, use the type defined below.\r\n-export type ReviewType = {\r\n-    id: number;\r\n-    name: string;\r\n-    address: string;\r\n-    image: string;\r\n-    rating: number;\r\n-    review: string;\r\n-\r\n-// Replace with your actual API endpoint and token if needed\r\n-const API_URL = \"https://app.nocodb.com/api/v2/tables/mqxdcj08df39q7u/records?offset=0&limit=25&where=&viewId=vwuk6k6pdfoz6672\";\r\n-const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\"; // Replace with your nocodb API token\r\n-\r\n-export async function fetchReviews(): Promise<ReviewType[]> {\r\n-    const response = await fetch(API_URL, {\r\n-        headers: {\r\n-            \"xc-token\": API_TOKEN,\r\n-            \"Content-Type\": \"application/json\",\r\n-        },\r\n-    });\r\n-    const data = await response.json();\r\n-    const reviews = data.records || [];\r\n-    return reviews.map((item: any, index: number) => ({\r\n-        ...item,\r\n-        avatar: imgs[index] || item.image,\r\n-        // Add href or other fields as needed\r\n-    }));\r\n-}\r\n-\r\n-export const DEMO_REVIEWS: ReviewType[] = reviewsData.map((item, index) => ({\r\n-    ...item,\r\n-    avatar: imgs[index] || item.image,\r\n-    // Add href or other fields as needed\r\n-}));\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1746766137410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,17 @@\n-\n+/**\r\n+ * Gọi API với URL và token, trả về dữ liệu JSON.\r\n+ * @param url string - endpoint API\r\n+ * @param token string - API token\r\n+ */\r\n+export async function callApi<T>(url: string, token: string): Promise<T> {\r\n+    const response = await fetch(url, {\r\n+        headers: {\r\n+            \"xc-token\": token,\r\n+            \"Content-Type\": \"application/json\",\r\n+        },\r\n+    });\r\n+    if (!response.ok) {\r\n+        throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n+    }\r\n+    return response.json() as Promise<T>;\r\n+}\r\n"
                },
                {
                    "date": 1746766158986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,35 @@\n-/**\r\n- * Gọi API với URL và token, trả về dữ liệu JSON.\r\n- * @param url string - endpoint API\r\n- * @param token string - API token\r\n- */\r\n-export async function callApi<T>(url: string, token: string): Promise<T> {\r\n-    const response = await fetch(url, {\r\n+import reviewsData from \"./testimonials.json\";\r\n+// If you have a ReviewType, import it. Otherwise, use the type defined below.\r\n+export type ReviewType = {\r\n+    id: number;\r\n+    name: string;\r\n+    address: string;\r\n+    image: string;\r\n+    rating: number;\r\n+    review: string;\r\n+\r\n+// Replace with your actual API endpoint and token if needed\r\n+const API_URL = \"https://app.nocodb.com/api/v2/tables/mqxdcj08df39q7u/records?offset=0&limit=25&where=&viewId=vwuk6k6pdfoz6672\";\r\n+const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\"; // Replace with your nocodb API token\r\n+\r\n+export async function fetchReviews(): Promise<ReviewType[]> {\r\n+    const response = await fetch(API_URL, {\r\n         headers: {\r\n-            \"xc-token\": token,\r\n+            \"xc-token\": API_TOKEN,\r\n             \"Content-Type\": \"application/json\",\r\n         },\r\n     });\r\n-    if (!response.ok) {\r\n-        throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n-    }\r\n-    return response.json() as Promise<T>;\r\n+    const data = await response.json();\r\n+    const reviews = data.records || [];\r\n+    return reviews.map((item: any, index: number) => ({\r\n+        ...item,\r\n+        avatar: imgs[index] || item.image,\r\n+        // Add href or other fields as needed\r\n+    }));\r\n }\r\n+\r\n+export const DEMO_REVIEWS: ReviewType[] = reviewsData.map((item, index) => ({\r\n+    ...item,\r\n+    avatar: imgs[index] || item.image,\r\n+    // Add href or other fields as needed\r\n+}));\r\n"
                },
                {
                    "date": 1746766190372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,15 @@\n-import reviewsData from \"./testimonials.json\";\r\n-// If you have a ReviewType, import it. Otherwise, use the type defined below.\r\n-export type ReviewType = {\r\n-    id: number;\r\n-    name: string;\r\n-    address: string;\r\n-    image: string;\r\n-    rating: number;\r\n-    review: string;\r\n-\r\n-// Replace with your actual API endpoint and token if needed\r\n const API_URL = \"https://app.nocodb.com/api/v2/tables/mqxdcj08df39q7u/records?offset=0&limit=25&where=&viewId=vwuk6k6pdfoz6672\";\r\n-const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\"; // Replace with your nocodb API token\r\n+const API_TOKEN = \"Q77FhyKItb24O_dHv26GYa18PrWrLXeTH5A7FPFn\";\r\n \r\n-export async function fetchReviews(): Promise<ReviewType[]> {\r\n-    const response = await fetch(API_URL, {\r\n+export async function callApi<T>(url: string, token: string): Promise<T> {\r\n+    const response = await fetch(url, {\r\n         headers: {\r\n-            \"xc-token\": API_TOKEN,\r\n+            \"xc-token\": token,\r\n             \"Content-Type\": \"application/json\",\r\n         },\r\n     });\r\n-    const data = await response.json();\r\n-    const reviews = data.records || [];\r\n-    return reviews.map((item: any, index: number) => ({\r\n-        ...item,\r\n-        avatar: imgs[index] || item.image,\r\n-        // Add href or other fields as needed\r\n-    }));\r\n+    if (!response.ok) {\r\n+        throw new Error(`API call failed: ${response.status} ${response.statusText}`);\r\n+    }\r\n+    return response.json() as Promise<T>;\r\n }\r\n-\r\n-export const DEMO_REVIEWS: ReviewType[] = reviewsData.map((item, index) => ({\r\n-    ...item,\r\n-    avatar: imgs[index] || item.image,\r\n-    // Add href or other fields as needed\r\n-}));\r\n"
                }
            ],
            "date": 1746765299233,
            "name": "Commit-0",
            "content": "import"
        }
    ]
}