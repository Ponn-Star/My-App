{
    "sourceFile": "FrontEnd/src/conext/AppContext.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1748613050031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748613068311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,11 +39,13 @@\n                 toast.error(error.message)\r\n             }\r\n         }\r\n \r\n-        useEffect(()=> )\r\n+        useEffect(()=> {\r\n \r\n+        },[user])\r\n \r\n+\r\n   const value = {\r\n         currency, navigate, user, getToken, isOwner, setIsOwner, axios, showRoomReg, setRoomReg, \r\n   }\r\n \r\n"
                },
                {
                    "date": 1748613083765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n             }\r\n         }\r\n \r\n         useEffect(()=> {\r\n-\r\n+            if(user))\r\n         },[user])\r\n \r\n \r\n   const value = {\r\n"
                },
                {
                    "date": 1748613101078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,11 @@\n             }\r\n         }\r\n \r\n         useEffect(()=> {\r\n-            if(user))\r\n+            if(user){\r\n+                fetchUser();\r\n+            }\r\n         },[user])\r\n \r\n \r\n   const value = {\r\n"
                },
                {
                    "date": 1748613330687,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         },[user])\r\n \r\n \r\n   const value = {\r\n-        currency, navigate, user, getToken, isOwner, setIsOwner, axios, showRoomReg, setRoomReg, \r\n+        currency, navigate, user, getToken, isOwner, setIsOwner, axios, showRoomReg, setRoomReg, searchedRoomType, setsearchedRoomType\r\n   }\r\n \r\n   return (\r\n     <AppContext.Provider value={value}>\r\n"
                },
                {
                    "date": 1748613346021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,7 +57,7 @@\n     </AppContext.Provider>\r\n   )\r\n }\r\n \r\n-export const useAppContext = () => useContext(AppContext);\r\n+export const useAppContext = ()=> useContext(AppContext);\r\n \r\n \r\n"
                },
                {
                    "date": 1748622145025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import axios from \"axios\";\r\n-import { createContext, useAppContext, useState} from \"react\";\r\n+import { createContext, useContext, useState } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { useUser, useAuth} from \"@clerk/clerk-react\";\r\n import { toast } from 'react-hot-toast';\r\n import { useEffect } from \"react\";\r\n"
                },
                {
                    "date": 1748622201500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n             });\r\n \r\n             if (data.success) {\r\n                 setIsOwner(data.role === \"Admin\");\r\n-                setSearchedCities(data.recentSearchedCities);\r\n+                setsearchedRoomType(data.recentSearchedRoomType);\r\n             } else {\r\n                 setTimeout(() => {\r\n                 fetchUser();\r\n                 }, 5000);\r\n"
                },
                {
                    "date": 1749153336774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,63 +1,69 @@\n import axios from \"axios\";\r\n-import { createContext, useContext, useState } from \"react\";\r\n+import { createContext, useContext, useState, useEffect } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n-import { useUser, useAuth} from \"@clerk/clerk-react\";\r\n+import { useUser, useAuth } from \"@clerk/clerk-react\";\r\n import { toast } from 'react-hot-toast';\r\n-import { useEffect } from \"react\";\r\n \r\n-\r\n axios.defaults.baseURL = import.meta.env.VITE_BACKEND_URL;\r\n \r\n const AppContext = createContext();\r\n \r\n export const AppProvider = ({ children }) => {\r\n-\r\n     const currency = import.meta.env.VITE_CURENCY || \".000 VND\";\r\n     const navigate = useNavigate();\r\n-    const {user} = useUser();\r\n+    const { user } = useUser();\r\n     const { getToken } = useAuth();\r\n \r\n-    const [isOwner, setIsOwner] = useState(false)\r\n-    const [showRoomReg, setRoomReg] = useState(false)\r\n-    const [searchedRoomType, setsearchedRoomType] = useState([])\r\n+    const [isOwner, setIsOwner] = useState(false);\r\n+    const [showRoomReg, setRoomReg] = useState(false);\r\n+    const [recentSearchedRoomType, setRecentSearchedRoomType] = useState([]);\r\n \r\n-    const fetchUser = async ()=>{\r\n+    const fetchUser = async () => {\r\n         try {\r\n             const { data } = await axios.get('/api/user', {\r\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n                 setIsOwner(data.role === \"Admin\");\r\n-                setsearchedRoomType(data.recentSearchedRoomType);\r\n+                setRecentSearchedRoomType(data.recentSearchedRoomType || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n-                fetchUser();\r\n+                    fetchUser();\r\n                 }, 5000);\r\n             }\r\n-            } catch (error) {\r\n-                toast.error(error.message)\r\n-            }\r\n+        } catch (error) {\r\n+            toast.error(error.message);\r\n         }\r\n+    };\r\n \r\n-        useEffect(()=> {\r\n-            if(user){\r\n-                fetchUser();\r\n-            }\r\n-        },[user])\r\n+    useEffect(() => {\r\n+        if (user) {\r\n+            fetchUser();\r\n+        }\r\n+    }, [user]);\r\n \r\n+    const value = {\r\n+        currency,\r\n+        navigate,\r\n+        user,\r\n+        getToken,\r\n+        isOwner,\r\n+        setIsOwner,\r\n+        axios,\r\n+        showRoomReg,\r\n+        setRoomReg,\r\n+        recentSearchedRoomType,\r\n+        setRecentSearchedRoomType\r\n+    };\r\n \r\n-  const value = {\r\n-        currency, navigate, user, getToken, isOwner, setIsOwner, axios, showRoomReg, setRoomReg, searchedRoomType, setsearchedRoomType\r\n-  }\r\n+    return (\r\n+        <AppContext.Provider value={value}>\r\n+            {children}\r\n+        </AppContext.Provider>\r\n+    );\r\n+};\r\n \r\n-  return (\r\n-    <AppContext.Provider value={value}>\r\n-      {children}\r\n-    </AppContext.Provider>\r\n-  )\r\n-}\r\n+export const useAppContext = () => useContext(AppContext);\r\n \r\n-export const useAppContext = ()=> useContext(AppContext);\r\n \r\n-\r\n"
                },
                {
                    "date": 1749153397966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,8 @@\n         getToken,\r\n         isOwner,\r\n         setIsOwner,\r\n         axios,\r\n-        showRoomReg,\r\n-        setRoomReg,\r\n         recentSearchedRoomType,\r\n         setRecentSearchedRoomType\r\n     };\r\n \r\n"
                },
                {
                    "date": 1749153413993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,10 @@\n         getToken,\r\n         isOwner,\r\n         setIsOwner,\r\n         axios,\r\n+        showRoomReg,\r\n+        setRoomReg,\r\n         recentSearchedRoomType,\r\n         setRecentSearchedRoomType\r\n     };\r\n \r\n"
                },
                {
                    "date": 1749153467506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n     const { user } = useUser();\r\n     const { getToken } = useAuth();\r\n \r\n     const [isOwner, setIsOwner] = useState(false);\r\n-    const [showRoomReg, setRoomReg] = useState(false);\r\n     const [recentSearchedRoomType, setRecentSearchedRoomType] = useState([]);\r\n \r\n     const fetchUser = async () => {\r\n         try {\r\n@@ -50,10 +49,8 @@\n         getToken,\r\n         isOwner,\r\n         setIsOwner,\r\n         axios,\r\n-        showRoomReg,\r\n-        setRoomReg,\r\n         recentSearchedRoomType,\r\n         setRecentSearchedRoomType\r\n     };\r\n \r\n"
                },
                {
                    "date": 1749153782743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,16 +15,18 @@\n     const { getToken } = useAuth();\r\n \r\n     const [isOwner, setIsOwner] = useState(false);\r\n     const [recentSearchedRoomType, setRecentSearchedRoomType] = useState([]);\r\n+    const [role, setRole] = useState(\"User\");\r\n \r\n     const fetchUser = async () => {\r\n         try {\r\n             const { data } = await axios.get('/api/user', {\r\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n+                setRole(data.role);\r\n                 setIsOwner(data.role === \"Admin\");\r\n                 setRecentSearchedRoomType(data.recentSearchedRoomType || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n@@ -50,9 +52,11 @@\n         isOwner,\r\n         setIsOwner,\r\n         axios,\r\n         recentSearchedRoomType,\r\n-        setRecentSearchedRoomType\r\n+        setRecentSearchedRoomType,\r\n+        role,\r\n+        setRole\r\n     };\r\n \r\n     return (\r\n         <AppContext.Provider value={value}>\r\n"
                },
                {
                    "date": 1749153848153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,8 @@\n     const navigate = useNavigate();\r\n     const { user } = useUser();\r\n     const { getToken } = useAuth();\r\n \r\n-    const [isOwner, setIsOwner] = useState(false);\r\n     const [recentSearchedRoomType, setRecentSearchedRoomType] = useState([]);\r\n     const [role, setRole] = useState(\"User\");\r\n \r\n     const fetchUser = async () => {\r\n@@ -24,10 +23,9 @@\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n-                setRole(data.role);\r\n-                setIsOwner(data.role === \"Admin\");\r\n+                setRole(data.role === \"Admin\");\r\n                 setRecentSearchedRoomType(data.recentSearchedRoomType || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n                     fetchUser();\r\n@@ -48,10 +46,8 @@\n         currency,\r\n         navigate,\r\n         user,\r\n         getToken,\r\n-        isOwner,\r\n-        setIsOwner,\r\n         axios,\r\n         recentSearchedRoomType,\r\n         setRecentSearchedRoomType,\r\n         role,\r\n"
                },
                {
                    "date": 1749154082212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,11 @@\n     const { getToken } = useAuth();\r\n \r\n     const [recentSearchedRoomType, setRecentSearchedRoomType] = useState([]);\r\n     const [role, setRole] = useState(\"User\");\r\n+    const [rooms, setRooms] = useState([]); // Thêm state lưu danh sách phòng\r\n \r\n+    // Fetch user info\r\n     const fetchUser = async () => {\r\n         try {\r\n             const { data } = await axios.get('/api/user', {\r\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n@@ -35,11 +37,28 @@\n             toast.error(error.message);\r\n         }\r\n     };\r\n \r\n+    // Fetch rooms\r\n+    const fetchRooms = async () => {\r\n+        try {\r\n+            const { data } = await axios.get('/api/rooms', {\r\n+                headers: { Authorization: `Bearer ${await getToken()}` }\r\n+            });\r\n+            if (data.success) {\r\n+                setRooms(data.rooms);\r\n+            } else {\r\n+                toast.error(data.message);\r\n+            }\r\n+        } catch (error) {\r\n+            toast.error(error.message);\r\n+        }\r\n+    };\r\n+\r\n     useEffect(() => {\r\n         if (user) {\r\n             fetchUser();\r\n+            fetchRooms();\r\n         }\r\n     }, [user]);\r\n \r\n     const value = {\r\n@@ -50,9 +69,12 @@\n         axios,\r\n         recentSearchedRoomType,\r\n         setRecentSearchedRoomType,\r\n         role,\r\n-        setRole\r\n+        setRole,\r\n+        rooms,\r\n+        setRooms,\r\n+        fetchRooms // Cho phép component khác gọi lại nếu muốn reload danh sách phòng\r\n     };\r\n \r\n     return (\r\n         <AppContext.Provider value={value}>\r\n"
                },
                {
                    "date": 1749154094003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         role,\r\n         setRole,\r\n         rooms,\r\n         setRooms,\r\n-        fetchRooms // Cho phép component khác gọi lại nếu muốn reload danh sách phòng\r\n+        fetchRooms\r\n     };\r\n \r\n     return (\r\n         <AppContext.Provider value={value}>\r\n"
                },
                {
                    "date": 1749164965238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n-                setRole(data.role === \"Admin\");\r\n-                setRecentSearchedRoomType(data.recentSearchedRoomType || []);\r\n+                setRole(data.role); // <-- Sửa lại, không so sánh === \"Admin\"\r\n+                setRecentSearchedRoomType(data.recentSearchedCities || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n                     fetchUser();\r\n                 }, 5000);\r\n"
                },
                {
                    "date": 1749174837164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n-                setRole(data.role); // <-- Sửa lại, không so sánh === \"Admin\"\r\n+---                setRole(data.role); // <-- Sửa lại, không so sánh === \"Admin\"\r\n                 setRecentSearchedRoomType(data.recentSearchedCities || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n                     fetchUser();\r\n"
                },
                {
                    "date": 1749174887132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n----                setRole(data.role); // <-- Sửa lại, không so sánh === \"Admin\"\r\n+                setRole(data.role); // <-- Sửa lại, không so sánh === \"Admin\"\r\n                 setRecentSearchedRoomType(data.recentSearchedCities || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n                     fetchUser();\r\n"
                },
                {
                    "date": 1749178034089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n-                setRole(data.role); // <-- Sửa lại, không so sánh === \"Admin\"\r\n-                setRecentSearchedRoomType(data.recentSearchedCities || []);\r\n+                setRole(data.role); // Đúng rồi\r\n+                setRecentSearchedRoomType(data.recentSearchedRoomType || []); // Sửa lại key này\r\n             } else {\r\n                 setTimeout(() => {\r\n                     fetchUser();\r\n                 }, 5000);\r\n"
                },
                {
                    "date": 1749178041536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n                 headers: { Authorization: `Bearer ${await getToken()}` }\r\n             });\r\n \r\n             if (data.success) {\r\n-                setRole(data.role); // Đúng rồi\r\n-                setRecentSearchedRoomType(data.recentSearchedRoomType || []); // Sửa lại key này\r\n+                setRole(data.role);\r\n+                setRecentSearchedRoomType(data.recentSearchedRoomType || []);\r\n             } else {\r\n                 setTimeout(() => {\r\n                     fetchUser();\r\n                 }, 5000);\r\n"
                }
            ],
            "date": 1748613050031,
            "name": "Commit-0",
            "content": "import axios from \"axios\";\r\nimport { createContext, useAppContext, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser, useAuth} from \"@clerk/clerk-react\";\r\nimport { toast } from 'react-hot-toast';\r\nimport { useEffect } from \"react\";\r\n\r\n\r\naxios.defaults.baseURL = import.meta.env.VITE_BACKEND_URL;\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n\r\n    const currency = import.meta.env.VITE_CURENCY || \".000 VND\";\r\n    const navigate = useNavigate();\r\n    const {user} = useUser();\r\n    const { getToken } = useAuth();\r\n\r\n    const [isOwner, setIsOwner] = useState(false)\r\n    const [showRoomReg, setRoomReg] = useState(false)\r\n    const [searchedRoomType, setsearchedRoomType] = useState([])\r\n\r\n    const fetchUser = async ()=>{\r\n        try {\r\n            const { data } = await axios.get('/api/user', {\r\n                headers: { Authorization: `Bearer ${await getToken()}` }\r\n            });\r\n\r\n            if (data.success) {\r\n                setIsOwner(data.role === \"Admin\");\r\n                setSearchedCities(data.recentSearchedCities);\r\n            } else {\r\n                setTimeout(() => {\r\n                fetchUser();\r\n                }, 5000);\r\n            }\r\n            } catch (error) {\r\n                toast.error(error.message)\r\n            }\r\n        }\r\n\r\n        useEffect(()=> )\r\n\r\n\r\n  const value = {\r\n        currency, navigate, user, getToken, isOwner, setIsOwner, axios, showRoomReg, setRoomReg, \r\n  }\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\n\r\n"
        }
    ]
}