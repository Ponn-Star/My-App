{
    "sourceFile": "BackEnd/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1747520508860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747520720748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   }\r\n }\r\n \r\n // Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n-app.get('/api/rooms', authenticate, async (req, res) => {\r\n+app.get('/', authenticate, async (req, res) => {\r\n   const role = req.user.publicMetadata.role || 'user';\r\n \r\n   if (role !== 'admin' && role !== 'user') {\r\n     return res.status(403).json({ error: 'Forbidden' });\r\n"
                },
                {
                    "date": 1747520729649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n   }\r\n });\r\n \r\n // Ví dụ route thêm phòng (chỉ admin được thêm)\r\n-app.post('/api/rooms', authenticate, async (req, res) => {\r\n+app.post('/', authenticate, async (req, res) => {\r\n   const role = req.user.publicMetadata.role || 'user';\r\n \r\n   if (role !== 'admin') {\r\n     return res.status(403).json({ error: 'Forbidden' });\r\n"
                },
                {
                    "date": 1747520761825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n   }\r\n }\r\n \r\n // Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n-app.get('/', authenticate, async (req, res) => {\r\n+app.get('/api/rooms', authenticate, async (req, res) => {\r\n   const role = req.user.publicMetadata.role || 'user';\r\n \r\n   if (role !== 'admin' && role !== 'user') {\r\n     return res.status(403).json({ error: 'Forbidden' });\r\n@@ -54,9 +54,9 @@\n   }\r\n });\r\n \r\n // Ví dụ route thêm phòng (chỉ admin được thêm)\r\n-app.post('/', authenticate, async (req, res) => {\r\n+app.post('/api/rooms', authenticate, async (req, res) => {\r\n   const role = req.user.publicMetadata.role || 'user';\r\n \r\n   if (role !== 'admin') {\r\n     return res.status(403).json({ error: 'Forbidden' });\r\n"
                },
                {
                    "date": 1747520860622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,97 @@\n     console.error('Add room error:', error);\r\n     res.status(500).json({ error: 'Failed to add room' });\r\n   }\r\n });\r\n+import express from 'express';\r\n+import cors from 'cors';\r\n+import fetch from 'node-fetch';\r\n+import { verifyToken } from '@clerk/clerk-sdk-node';\r\n+import dotenv from 'dotenv';\r\n \r\n+dotenv.config();\r\n+\r\n+const app = express();\r\n+app.use(cors());\r\n+app.use(express.json());\r\n+\r\n+const PORT = process.env.PORT || 4000;\r\n+const NOCODB_API_URL = process.env.NOCODB_API_URL;\r\n+const NOCODB_API_KEY = process.env.NOCODB_API_KEY;\r\n+const CLERK_API_KEY = process.env.CLERK_API_KEY;\r\n+\r\n+// Middleware xác thực token Clerk\r\n+async function authenticate(req, res, next) {\r\n+  const authHeader = req.headers.authorization;\r\n+  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n+    return res.status(401).json({ error: 'Missing or invalid Authorization header' });\r\n+  }\r\n+  const token = authHeader.split(' ')[1];\r\n+\r\n+  try {\r\n+    // Xác thực token và lấy thông tin user\r\n+    const session = await verifyToken(token, { secret: CLERK_API_KEY });\r\n+    req.user = session;\r\n+    next();\r\n+  } catch (error) {\r\n+    console.error('Auth error:', error);\r\n+    return res.status(401).json({ error: 'Invalid token' });\r\n+  }\r\n+}\r\n+\r\n+// Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n+app.get('/api/rooms', authenticate, async (req, res) => {\r\n+  const role = req.user.publicMetadata.role || 'user';\r\n+\r\n+  if (role !== 'admin' && role !== 'user') {\r\n+    return res.status(403).json({ error: 'Forbidden' });\r\n+  }\r\n+\r\n+  try {\r\n+    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n+      headers: { 'xc-token': NOCODB_API_KEY }\r\n+    });\r\n+    const data = await response.json();\r\n+    res.json(data);\r\n+  } catch (error) {\r\n+    console.error('Fetch rooms error:', error);\r\n+    res.status(500).json({ error: 'Failed to fetch rooms' });\r\n+  }\r\n+});\r\n+\r\n+// Ví dụ route thêm phòng (chỉ admin được thêm)\r\n+app.post('/api/rooms', authenticate, async (req, res) => {\r\n+  const role = req.user.publicMetadata.role || 'user';\r\n+\r\n+  if (role !== 'admin') {\r\n+    return res.status(403).json({ error: 'Forbidden' });\r\n+  }\r\n+\r\n+  try {\r\n+    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n+      method: 'POST',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'xc-token': NOCODB_API_KEY,\r\n+      },\r\n+      body: JSON.stringify(req.body),\r\n+    });\r\n+    const data = await response.json();\r\n+    res.json(data);\r\n+  } catch (error) {\r\n+    console.error('Add room error:', error);\r\n+    res.status(500).json({ error: 'Failed to add room' });\r\n+  }\r\n+});\r\n+\r\n // Start server\r\n app.listen(PORT, () => {\r\n   console.log(`Server running on port ${PORT}`);\r\n });\r\n+app.get('/', (req, res) => {\r\n+  res.send('API backend is running');\r\n+});\r\n+\r\n+// Start server\r\n+app.listen(PORT, () => {\r\n+  console.log(`Server running on port ${PORT}`);\r\n+});\r\n"
                },
                {
                    "date": 1747520866604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,173 +0,0 @@\n-import express from 'express';\r\n-import cors from 'cors';\r\n-import fetch from 'node-fetch';\r\n-import { verifyToken } from '@clerk/clerk-sdk-node';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const app = express();\r\n-app.use(cors());\r\n-app.use(express.json());\r\n-\r\n-const PORT = process.env.PORT || 4000;\r\n-const NOCODB_API_URL = process.env.NOCODB_API_URL;\r\n-const NOCODB_API_KEY = process.env.NOCODB_API_KEY;\r\n-const CLERK_API_KEY = process.env.CLERK_API_KEY;\r\n-\r\n-// Middleware xác thực token Clerk\r\n-async function authenticate(req, res, next) {\r\n-  const authHeader = req.headers.authorization;\r\n-  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n-    return res.status(401).json({ error: 'Missing or invalid Authorization header' });\r\n-  }\r\n-  const token = authHeader.split(' ')[1];\r\n-\r\n-  try {\r\n-    // Xác thực token và lấy thông tin user\r\n-    const session = await verifyToken(token, { secret: CLERK_API_KEY });\r\n-    req.user = session;\r\n-    next();\r\n-  } catch (error) {\r\n-    console.error('Auth error:', error);\r\n-    return res.status(401).json({ error: 'Invalid token' });\r\n-  }\r\n-}\r\n-\r\n-// Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n-app.get('/api/rooms', authenticate, async (req, res) => {\r\n-  const role = req.user.publicMetadata.role || 'user';\r\n-\r\n-  if (role !== 'admin' && role !== 'user') {\r\n-    return res.status(403).json({ error: 'Forbidden' });\r\n-  }\r\n-\r\n-  try {\r\n-    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n-      headers: { 'xc-token': NOCODB_API_KEY }\r\n-    });\r\n-    const data = await response.json();\r\n-    res.json(data);\r\n-  } catch (error) {\r\n-    console.error('Fetch rooms error:', error);\r\n-    res.status(500).json({ error: 'Failed to fetch rooms' });\r\n-  }\r\n-});\r\n-\r\n-// Ví dụ route thêm phòng (chỉ admin được thêm)\r\n-app.post('/api/rooms', authenticate, async (req, res) => {\r\n-  const role = req.user.publicMetadata.role || 'user';\r\n-\r\n-  if (role !== 'admin') {\r\n-    return res.status(403).json({ error: 'Forbidden' });\r\n-  }\r\n-\r\n-  try {\r\n-    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n-      method: 'POST',\r\n-      headers: {\r\n-        'Content-Type': 'application/json',\r\n-        'xc-token': NOCODB_API_KEY,\r\n-      },\r\n-      body: JSON.stringify(req.body),\r\n-    });\r\n-    const data = await response.json();\r\n-    res.json(data);\r\n-  } catch (error) {\r\n-    console.error('Add room error:', error);\r\n-    res.status(500).json({ error: 'Failed to add room' });\r\n-  }\r\n-});\r\n-import express from 'express';\r\n-import cors from 'cors';\r\n-import fetch from 'node-fetch';\r\n-import { verifyToken } from '@clerk/clerk-sdk-node';\r\n-import dotenv from 'dotenv';\r\n-\r\n-dotenv.config();\r\n-\r\n-const app = express();\r\n-app.use(cors());\r\n-app.use(express.json());\r\n-\r\n-const PORT = process.env.PORT || 4000;\r\n-const NOCODB_API_URL = process.env.NOCODB_API_URL;\r\n-const NOCODB_API_KEY = process.env.NOCODB_API_KEY;\r\n-const CLERK_API_KEY = process.env.CLERK_API_KEY;\r\n-\r\n-// Middleware xác thực token Clerk\r\n-async function authenticate(req, res, next) {\r\n-  const authHeader = req.headers.authorization;\r\n-  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n-    return res.status(401).json({ error: 'Missing or invalid Authorization header' });\r\n-  }\r\n-  const token = authHeader.split(' ')[1];\r\n-\r\n-  try {\r\n-    // Xác thực token và lấy thông tin user\r\n-    const session = await verifyToken(token, { secret: CLERK_API_KEY });\r\n-    req.user = session;\r\n-    next();\r\n-  } catch (error) {\r\n-    console.error('Auth error:', error);\r\n-    return res.status(401).json({ error: 'Invalid token' });\r\n-  }\r\n-}\r\n-\r\n-// Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n-app.get('/api/rooms', authenticate, async (req, res) => {\r\n-  const role = req.user.publicMetadata.role || 'user';\r\n-\r\n-  if (role !== 'admin' && role !== 'user') {\r\n-    return res.status(403).json({ error: 'Forbidden' });\r\n-  }\r\n-\r\n-  try {\r\n-    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n-      headers: { 'xc-token': NOCODB_API_KEY }\r\n-    });\r\n-    const data = await response.json();\r\n-    res.json(data);\r\n-  } catch (error) {\r\n-    console.error('Fetch rooms error:', error);\r\n-    res.status(500).json({ error: 'Failed to fetch rooms' });\r\n-  }\r\n-});\r\n-\r\n-// Ví dụ route thêm phòng (chỉ admin được thêm)\r\n-app.post('/api/rooms', authenticate, async (req, res) => {\r\n-  const role = req.user.publicMetadata.role || 'user';\r\n-\r\n-  if (role !== 'admin') {\r\n-    return res.status(403).json({ error: 'Forbidden' });\r\n-  }\r\n-\r\n-  try {\r\n-    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n-      method: 'POST',\r\n-      headers: {\r\n-        'Content-Type': 'application/json',\r\n-        'xc-token': NOCODB_API_KEY,\r\n-      },\r\n-      body: JSON.stringify(req.body),\r\n-    });\r\n-    const data = await response.json();\r\n-    res.json(data);\r\n-  } catch (error) {\r\n-    console.error('Add room error:', error);\r\n-    res.status(500).json({ error: 'Failed to add room' });\r\n-  }\r\n-});\r\n-\r\n-// Start server\r\n-app.listen(PORT, () => {\r\n-  console.log(`Server running on port ${PORT}`);\r\n-});\r\n-app.get('/', (req, res) => {\r\n-  res.send('API backend is running');\r\n-});\r\n-\r\n-// Start server\r\n-app.listen(PORT, () => {\r\n-  console.log(`Server running on port ${PORT}`);\r\n-});\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747520883636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,85 @@\n-\n+import express from 'express';\r\n+import cors from 'cors';\r\n+import fetch from 'node-fetch';\r\n+import { verifyToken } from '@clerk/clerk-sdk-node';\r\n+import dotenv from 'dotenv';\r\n+\r\n+dotenv.config();\r\n+\r\n+const app = express();\r\n+app.use(cors());\r\n+app.use(express.json());\r\n+\r\n+const PORT = process.env.PORT || 4000;\r\n+const NOCODB_API_URL = process.env.NOCODB_API_URL;\r\n+const NOCODB_API_KEY = process.env.NOCODB_API_KEY;\r\n+const CLERK_API_KEY = process.env.CLERK_API_KEY;\r\n+\r\n+// Middleware xác thực token Clerk\r\n+async function authenticate(req, res, next) {\r\n+  const authHeader = req.headers.authorization;\r\n+  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n+    return res.status(401).json({ error: 'Missing or invalid Authorization header' });\r\n+  }\r\n+  const token = authHeader.split(' ')[1];\r\n+\r\n+  try {\r\n+    // Xác thực token và lấy thông tin user\r\n+    const session = await verifyToken(token, { secret: CLERK_API_KEY });\r\n+    req.user = session;\r\n+    next();\r\n+  } catch (error) {\r\n+    console.error('Auth error:', error);\r\n+    return res.status(401).json({ error: 'Invalid token' });\r\n+  }\r\n+}\r\n+\r\n+// Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n+app.get('/api/rooms', authenticate, async (req, res) => {\r\n+  const role = req.user.publicMetadata.role || 'user';\r\n+\r\n+  if (role !== 'admin' && role !== 'user') {\r\n+    return res.status(403).json({ error: 'Forbidden' });\r\n+  }\r\n+\r\n+  try {\r\n+    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n+      headers: { 'xc-token': NOCODB_API_KEY }\r\n+    });\r\n+    const data = await response.json();\r\n+    res.json(data);\r\n+  } catch (error) {\r\n+    console.error('Fetch rooms error:', error);\r\n+    res.status(500).json({ error: 'Failed to fetch rooms' });\r\n+  }\r\n+});\r\n+\r\n+// Ví dụ route thêm phòng (chỉ admin được thêm)\r\n+app.post('/api/rooms', authenticate, async (req, res) => {\r\n+  const role = req.user.publicMetadata.role || 'user';\r\n+\r\n+  if (role !== 'admin') {\r\n+    return res.status(403).json({ error: 'Forbidden' });\r\n+  }\r\n+\r\n+  try {\r\n+    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n+      method: 'POST',\r\n+      headers: {\r\n+        'Content-Type': 'application/json',\r\n+        'xc-token': NOCODB_API_KEY,\r\n+      },\r\n+      body: JSON.stringify(req.body),\r\n+    });\r\n+    const data = await response.json();\r\n+    res.json(data);\r\n+  } catch (error) {\r\n+    console.error('Add room error:', error);\r\n+    res.status(500).json({ error: 'Failed to add room' });\r\n+  }\r\n+});\r\n+\r\n+// Start server\r\n+app.listen(PORT, () => {\r\n+  console.log(`Server running on port ${PORT}`);\r\n+});\r\n"
                },
                {
                    "date": 1749162037134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,85 +1,29 @@\n import express from 'express';\r\n import cors from 'cors';\r\n-import fetch from 'node-fetch';\r\n-import { verifyToken } from '@clerk/clerk-sdk-node';\r\n-import dotenv from 'dotenv';\r\n+import \"dotenv/config\";\r\n+import connectDB from './configs/db.js';\r\n+import { clerkMiddleware, ClerkExpressRequireAuth } from '@clerk/express'\r\n+import clerkWebhooks from './controllers/clerkWebhooks.js';\r\n+import userRouter from './routes/userRoutes.js';\r\n+import roomRouter from './routes/roomRoutes.js';\r\n+import bookingRouter from './routes/bookingRoutes.js';\r\n \r\n-dotenv.config();\r\n+connectDB()\r\n \r\n-const app = express();\r\n-app.use(cors());\r\n-app.use(express.json());\r\n+const app = express()\r\n+app.use(cors())\r\n \r\n-const PORT = process.env.PORT || 4000;\r\n-const NOCODB_API_URL = process.env.NOCODB_API_URL;\r\n-const NOCODB_API_KEY = process.env.NOCODB_API_KEY;\r\n-const CLERK_API_KEY = process.env.CLERK_API_KEY;\r\n+app.use(express.json())\r\n+app.use(clerkMiddleware())\r\n+app.use(ClerkExpressRequireAuth()); // hoặc requireAuth() nếu dùng @clerk/express\r\n \r\n-// Middleware xác thực token Clerk\r\n-async function authenticate(req, res, next) {\r\n-  const authHeader = req.headers.authorization;\r\n-  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n-    return res.status(401).json({ error: 'Missing or invalid Authorization header' });\r\n-  }\r\n-  const token = authHeader.split(' ')[1];\r\n+app.use(\"/api/clerk\", clerkWebhooks);\r\n \r\n-  try {\r\n-    // Xác thực token và lấy thông tin user\r\n-    const session = await verifyToken(token, { secret: CLERK_API_KEY });\r\n-    req.user = session;\r\n-    next();\r\n-  } catch (error) {\r\n-    console.error('Auth error:', error);\r\n-    return res.status(401).json({ error: 'Invalid token' });\r\n-  }\r\n-}\r\n+app.get('/', (req, res) => res.send(\"API is working\"))\r\n+app.use('/api/user', userRouter)\r\n+app.use('/api/rooms', roomRouter)\r\n+app.use('/api/bookings', bookingRouter)\r\n \r\n-// Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\n-app.get('/api/rooms', authenticate, async (req, res) => {\r\n-  const role = req.user.publicMetadata.role || 'user';\r\n+const PORT = process.env.PORT || 3000;\r\n \r\n-  if (role !== 'admin' && role !== 'user') {\r\n-    return res.status(403).json({ error: 'Forbidden' });\r\n-  }\r\n-\r\n-  try {\r\n-    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n-      headers: { 'xc-token': NOCODB_API_KEY }\r\n-    });\r\n-    const data = await response.json();\r\n-    res.json(data);\r\n-  } catch (error) {\r\n-    console.error('Fetch rooms error:', error);\r\n-    res.status(500).json({ error: 'Failed to fetch rooms' });\r\n-  }\r\n-});\r\n-\r\n-// Ví dụ route thêm phòng (chỉ admin được thêm)\r\n-app.post('/api/rooms', authenticate, async (req, res) => {\r\n-  const role = req.user.publicMetadata.role || 'user';\r\n-\r\n-  if (role !== 'admin') {\r\n-    return res.status(403).json({ error: 'Forbidden' });\r\n-  }\r\n-\r\n-  try {\r\n-    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n-      method: 'POST',\r\n-      headers: {\r\n-        'Content-Type': 'application/json',\r\n-        'xc-token': NOCODB_API_KEY,\r\n-      },\r\n-      body: JSON.stringify(req.body),\r\n-    });\r\n-    const data = await response.json();\r\n-    res.json(data);\r\n-  } catch (error) {\r\n-    console.error('Add room error:', error);\r\n-    res.status(500).json({ error: 'Failed to add room' });\r\n-  }\r\n-});\r\n-\r\n-// Start server\r\n-app.listen(PORT, () => {\r\n-  console.log(`Server running on port ${PORT}`);\r\n-});\r\n+app.listen(PORT, () => console.log(`Server running on port ${PORT}`));\r\n"
                },
                {
                    "date": 1749162044202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n app.use(cors())\r\n \r\n app.use(express.json())\r\n app.use(clerkMiddleware())\r\n-app.use(ClerkExpressRequireAuth()); // hoặc requireAuth() nếu dùng @clerk/express\r\n+app.use(ClerkExpressRequireAuth());\r\n \r\n app.use(\"/api/clerk\", clerkWebhooks);\r\n \r\n app.get('/', (req, res) => res.send(\"API is working\"))\r\n"
                },
                {
                    "date": 1749162146871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import express from 'express';\r\n import cors from 'cors';\r\n import \"dotenv/config\";\r\n import connectDB from './configs/db.js';\r\n-import { clerkMiddleware, ClerkExpressRequireAuth } from '@clerk/express'\r\n+import { clerkMiddleware, requireAuth } from '@clerk/express'\r\n import clerkWebhooks from './controllers/clerkWebhooks.js';\r\n import userRouter from './routes/userRoutes.js';\r\n import roomRouter from './routes/roomRoutes.js';\r\n import bookingRouter from './routes/bookingRoutes.js';\r\n@@ -14,9 +14,9 @@\n app.use(cors())\r\n \r\n app.use(express.json())\r\n app.use(clerkMiddleware())\r\n-app.use(ClerkExpressRequireAuth());\r\n+app.use(requireAuth()); // Sửa ở đây\r\n \r\n app.use(\"/api/clerk\", clerkWebhooks);\r\n \r\n app.get('/', (req, res) => res.send(\"API is working\"))\r\n"
                },
                {
                    "date": 1749163088223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,10 @@\n \r\n const app = express()\r\n app.use(cors())\r\n \r\n+app.post('api/stripe', express.raw({ type: 'application/json' }));\r\n+\r\n app.use(express.json())\r\n app.use(clerkMiddleware())\r\n app.use(requireAuth()); // Sửa ở đây\r\n \r\n"
                },
                {
                    "date": 1749163105018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,15 +6,16 @@\n import clerkWebhooks from './controllers/clerkWebhooks.js';\r\n import userRouter from './routes/userRoutes.js';\r\n import roomRouter from './routes/roomRoutes.js';\r\n import bookingRouter from './routes/bookingRoutes.js';\r\n+import { stripeWebhooks } from './controllers/stripeWebhooks.js';\r\n \r\n connectDB()\r\n \r\n const app = express()\r\n app.use(cors())\r\n \r\n-app.post('api/stripe', express.raw({ type: 'application/json' }));\r\n+app.post('api/stripe', express.raw({ type: 'application/json' }),stripeWebhooks);\r\n \r\n app.use(express.json())\r\n app.use(clerkMiddleware())\r\n app.use(requireAuth()); // Sửa ở đây\r\n"
                },
                {
                    "date": 1749163113000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n app.post('api/stripe', express.raw({ type: 'application/json' }),stripeWebhooks);\r\n \r\n app.use(express.json())\r\n app.use(clerkMiddleware())\r\n-app.use(requireAuth()); // Sửa ở đây\r\n+app.use(requireAuth());\r\n \r\n app.use(\"/api/clerk\", clerkWebhooks);\r\n \r\n app.get('/', (req, res) => res.send(\"API is working\"))\r\n"
                },
                {
                    "date": 1749177685095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,14 @@\n \r\n app.post('api/stripe', express.raw({ type: 'application/json' }),stripeWebhooks);\r\n \r\n app.use(express.json())\r\n+\r\n+app.use(\"/api/clerk\", clerkWebhooks);\r\n+\r\n app.use(clerkMiddleware())\r\n app.use(requireAuth());\r\n \r\n-app.use(\"/api/clerk\", clerkWebhooks);\r\n-\r\n app.get('/', (req, res) => res.send(\"API is working\"))\r\n app.use('/api/user', userRouter)\r\n app.use('/api/rooms', roomRouter)\r\n app.use('/api/bookings', bookingRouter)\r\n"
                }
            ],
            "date": 1747520508860,
            "name": "Commit-0",
            "content": "import express from 'express';\r\nimport cors from 'cors';\r\nimport fetch from 'node-fetch';\r\nimport { verifyToken } from '@clerk/clerk-sdk-node';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nconst PORT = process.env.PORT || 4000;\r\nconst NOCODB_API_URL = process.env.NOCODB_API_URL;\r\nconst NOCODB_API_KEY = process.env.NOCODB_API_KEY;\r\nconst CLERK_API_KEY = process.env.CLERK_API_KEY;\r\n\r\n// Middleware xác thực token Clerk\r\nasync function authenticate(req, res, next) {\r\n  const authHeader = req.headers.authorization;\r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    return res.status(401).json({ error: 'Missing or invalid Authorization header' });\r\n  }\r\n  const token = authHeader.split(' ')[1];\r\n\r\n  try {\r\n    // Xác thực token và lấy thông tin user\r\n    const session = await verifyToken(token, { secret: CLERK_API_KEY });\r\n    req.user = session;\r\n    next();\r\n  } catch (error) {\r\n    console.error('Auth error:', error);\r\n    return res.status(401).json({ error: 'Invalid token' });\r\n  }\r\n}\r\n\r\n// Ví dụ route lấy danh sách rooms (chỉ admin và user mới được xem)\r\napp.get('/api/rooms', authenticate, async (req, res) => {\r\n  const role = req.user.publicMetadata.role || 'user';\r\n\r\n  if (role !== 'admin' && role !== 'user') {\r\n    return res.status(403).json({ error: 'Forbidden' });\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n      headers: { 'xc-token': NOCODB_API_KEY }\r\n    });\r\n    const data = await response.json();\r\n    res.json(data);\r\n  } catch (error) {\r\n    console.error('Fetch rooms error:', error);\r\n    res.status(500).json({ error: 'Failed to fetch rooms' });\r\n  }\r\n});\r\n\r\n// Ví dụ route thêm phòng (chỉ admin được thêm)\r\napp.post('/api/rooms', authenticate, async (req, res) => {\r\n  const role = req.user.publicMetadata.role || 'user';\r\n\r\n  if (role !== 'admin') {\r\n    return res.status(403).json({ error: 'Forbidden' });\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${NOCODB_API_URL}/Rooms`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'xc-token': NOCODB_API_KEY,\r\n      },\r\n      body: JSON.stringify(req.body),\r\n    });\r\n    const data = await response.json();\r\n    res.json(data);\r\n  } catch (error) {\r\n    console.error('Add room error:', error);\r\n    res.status(500).json({ error: 'Failed to add room' });\r\n  }\r\n});\r\n\r\n// Start server\r\napp.listen(PORT, () => {\r\n  console.log(`Server running on port ${PORT}`);\r\n});\r\n"
        }
    ]
}